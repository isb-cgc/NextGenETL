#
# YAML Configuration file used for script build_clinical_data_bq_table.py
# Builds BQ table for clinical data.
#

version: 3

api_params:
  # GDC API endpoint for retrieval of cases dataset
  # ENDPOINT: 'https://api.gdc.cancer.gov/cases'
  ENDPOINT: URL/OF/API/ENDPOINT

  # List of 'expand' field groups to include in the clinical data bq table
  EXPAND_FIELD_GROUPS:
    - your
    - list
    - of
    - expand
    - field
    - groups

  # fields that aren't desired for bq. Example:
  EXCLUDE_FIELDS:
    - your
    - list
    - of
    - excluded
    - fields

  # How many case records to retrieve per GDC API call. Larger batch sizes are more
  # likely to fail before completion, seems to work consistently at 2500
  BATCH_SIZE: 2500

  # Start index for retrieving case records
  START_INDEX: 0

  # Number of pages to write into json file (0 == all pages after start index)
  MAX_PAGES: 0

  # 'a' if appending to existing cases json (for continuation of interrupted file build)
  # 'w' if creating or overwriting existing CASES_JSON_FILE (default)
  IO_MODE: w

  # Directory to which to write the cases clinical data json file
  SCRATCH_DIR: path/from/home/directory

  # File to which to write the cases clinical data json file
  DATA_OUTPUT_FILE: your_datafile.jsonl

  # most recent GDC release number
  # (NOTE: pulls data from the current release regardless of value here, not currently
  # possible to specify a release number when making API calls.)
  GDC_RELEASE: relXX

bq_params:
  # What project are we in:
  WORKING_PROJECT: your_working_project_id

  # Where is the BQ table dataset:
  TARGET_DATASET: your_bq_dataset_name_in_working_project

  # Reference Dataset
  METADATA_DATASET: metadata_dataset

  # What bucket is going to get the text file heading to BQ?
  WORKING_BUCKET: your_bucket_name

  # What is the file path to the text file in the bucket:
  WORKING_BUCKET_DIR: full/path/in/bucket # DO NOT HAVE A LEADING /

  # name for master table (will be prefixed with GDC_RELEASE value)
  MASTER_TABLE: clinical_data

  # Component of table name, differentiates that this is a clinical data table
  # base program table name form: GDC_RELEASE + '_' + TABLE_PREFIX  + '_' + program_name
  TABLE_PREFIX: clin

# Note that although the steps are given in the actual order here as
# a list, changing the order here does not change the order of execution, which is fixed.
steps:

  # Get the manifest from the source data node:
  - retrieve_and_output_cases

  # Get the table schema/description/tags pulled from git:
  - create_bq_schema_obj

  # Build BQ Table
  - build_bq_table
